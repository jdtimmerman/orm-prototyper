application_title		= ORM Dialoog prototyper

###########################################################
### Types
facttype 				= feittype
objecttype				= objecttype
valuetype				= waarde
totality 				= totaliteitsconstraint
unicity					= uniciteitsconstraint
elementary_fact			= elementair feit

###########################################################
### Manipulating model

adding 					= Toevoegen "%s"
adding_already_exists	= Probeerde "%s" toe te voegen, maar het bestond al
getting_relating		= Verkrijg relates voor "%s"
model_changed			= Het model is veranderd

# Parsing
parsing					= Parseren: "%s"
parse_error 			= Kan de zin niet parseren

# Selection
selection_changed		= De selectie is veranderd
selecting				= Selecteer vorm %s
deselecting				= Deselecteer

###########################################################
### Shapes

creating_shape			= Maak vorm voor %s
no_ports_available		= Geen poorten beschikbaar voor deze types: %s -> %s

###########################################################
### Implementation

unimplemented_method 	= Deze methode is niet geïmplementeerd
unsupported_class 		= De class van het gegeven object wordt niet ondersteund (%s)
not_handled				= Niet behandeld

written_to				= Geschreven naar "%s"
err_written_to			= Schrijven naar "%s" is mislukt

###########################################################
### Errors

# Generic
err						= Fout
err_fatal 				= Een fatale fout is gebeurd
err_listeners_attached 	= Er zijn geen "listeners" toegevoegd
err_size_unequal		= De lijsten zijn niet even lang

# Types
err_incorrect_wildcards	= Verkeerd aantal wildcards gevonden (%d), verwachtte er %d
err_incorrect_objects	= Verkeerd aantal objecten gevonden (%d), verwachtte er %d
err_facttype_exists		= Dit feittype (%s) bestaat al in het model.
err_still_playing_roles = Dit objecttype speelt nog een rol in minstens één feittype 

err_update_constraint	= Fout bij bijwerken constraint 
err_update_ot			= Fout bij bijwerken objecttype
err_update_ft			= Fout bij bijwerken feittype
err_set_valuetype		= Fout bij bijwerken waarde
err_remove				= Fout bij verwijderen
err_add					= Fout bij toevoegen
err_analyze				= Fout bij analyseren van zin

# File
err_export_file			= Fout bij exporteren van bestand

###########################################################
### VIEW

dialog					= Dialoog
contents				= Inhoud
file					= Bestand
export_file				= Exporteer %s bestand
submit					= Versturen

## GRAPH

refreshing_graph		= Verversen diagram
drawing					= Tekenen %s
ports_not_implemented	= Poorten voor "%s" niet geïmplementeerd

## QUESTION
q_help_short			= ?
q_help_tooltip			= Laat help en voorbeelden zien voor deze eigenschap

# Elementary fact question
ef_state_fact			= <html><p>Noem een feit</p></html>
ef_help					= <html> \
	<p>Een elementair feit is een feit, die niet in meerdere feiten opgesplitst kan worden.</p> \
	<p>Objecten zijn 'dingen' en worden met een hoofdletter geschreven. Alle andere woorden maken deel uit van de relatie tussen de objecten</p> \
	<p><strong>Voorbeeld</strong><br> \
	"Student krijgt Diploma" is een elementair feit<br/> \
	"Student heeft een Naam en krijgt een Diploma" bestaat uit twee elementaire feiten \
	</p> \
	</html>
ef_alter_fact			= <html>Bewerk het geselecteerde feittype</html>

# Totality constraint
tc_is_mandatory			= <html><p><em>Moet</em> dit object altijd in de volgende relaties meedoen?</p></html>
tc_no_facts				= <html><p>Dit object zit in geen enkel feittype.</p></html>
tc_help					= <html>\
	<p>Een totaliteit kan gezien worden als een 'verplichting'. Het geeft aan of de waarden in het object altijd in een feittype moeten voorkomen.</p> \
	<p><strong>Voorbeeld</strong><br>\
	Een "Persoon" moet altijd in feittype "Persoon heeft Achternaam", omdat iedereen een achternaam heeft. \
	</p> \
	</html> 

# Unicity constraint
uc_possible				= Toegestaan?
uc_is_unique			= <html><p>Er van uitgaande dat de eerste regel is toegestaan, welke volgende regels zijn wel of niet toegestaan?</p></html>
uc_help					= <html> \
	<p>Een uniciteit geeft aan welke waarden (of combinatie van) in een feittypen unique moeten zijn en dus niet nogmaals mogen worden toegevoegd.</p> \
	<p><strong>Voorbeeld</strong> \
	Stel dat een persoon één achternaam heeft, en meerdere voornamen kan hebben. \
	<table>\
	<tr><td>Persoon</td><td>Voornaam</td><td>Geldig?</td></tr>\
	<tr><td>1</td><td>Jan</td><td></td></tr>\
	<tr><td>1</td><td>Kees</td><td>Ja, want iemand mag meer voornamen hebben</td></tr>\
	<tr><td>2</td><td>Jan</td><td>Ja, want meerdere mensen kunnen dezelfde voornaam hebben</td></tr>\
	</table>\
	<table>\
	<tr><td>Persoon</td><td>Achternaam</td><td>Geldig?</td></tr>\
	<tr><td>1</td><td>Klaassen</td><td></td></tr>\
	<tr><td>1</td><td>Janssen</td><td>Nee, want iemand mag maar één achternaam hebben</td></tr>\
	<tr><td>2</td><td>Klaassen</td><td>Ja, want meerdere mensen kunnen dezelfde achternaam hebben</td></tr>\
	</table>\
	</p> \
	<p>Deze voorbeeldinformatie kan ingevuld worden door een objecttype te selecteren. Anders verzint het programma zelf voorbeelden.</p> \
	</html>
	
# Sample data
sample					= Voorbeeld informatie
sample_provide			= <html>Vul voorbeelden in voor het geselecteerde objecttype.</html>
sample_help				= <html><p>Het invullen van voorbeeld informatie kan het eenvoudiger maken om uniciteiten te bepalen.</p></html>

# ValueType
vt_isValueType			= <html>Dit object is een waarde</html>
vt_help					= <html><p>In tegenstelling tot objecttypes is een waardetype geen 'ding' maar juist een eigenschap dat een ding kan hebben.</p></html>
